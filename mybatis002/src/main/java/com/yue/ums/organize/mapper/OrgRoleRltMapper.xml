<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yue.ums.organize.client.OrgRoleRltMapper">
  <resultMap id="BaseResultMap" type="com.yue.ums.organize.model.OrgRoleRlt">
    <id column="rlt_id" jdbcType="INTEGER" property="rltId" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="is_author" jdbcType="BIT" property="isAuthor" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    rlt_id, org_id, role_id, is_author, status, create_time, update_time, create_by, 
    update_by, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from org_role_rlt
    where rlt_id = #{rltId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from org_role_rlt
    where rlt_id = #{rltId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yue.ums.organize.model.OrgRoleRlt">
    insert into org_role_rlt (rlt_id, org_id, role_id, 
      is_author, status, create_time, 
      update_time, create_by, update_by, 
      note)
    values (#{rltId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{isAuthor,jdbcType=BIT}, #{status,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, #{updateBy,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yue.ums.organize.model.OrgRoleRlt">
    insert into org_role_rlt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rltId != null">
        rlt_id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="isAuthor != null">
        is_author,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rltId != null">
        #{rltId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isAuthor != null">
        #{isAuthor,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yue.ums.organize.model.OrgRoleRlt">
    update org_role_rlt
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isAuthor != null">
        is_author = #{isAuthor,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where rlt_id = #{rltId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yue.ums.organize.model.OrgRoleRlt">
    update org_role_rlt
    set org_id = #{orgId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      is_author = #{isAuthor,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where rlt_id = #{rltId,jdbcType=INTEGER}
  </update>
</mapper>